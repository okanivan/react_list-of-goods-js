{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_LENGHT","SORT_BY_ALPHABET","App","useState","sortField","setSortField","isReversedGoods","setIsRevesedGoods","sortedGoods","goods","sortGoods","preperedGood","sort","a","b","localeCompare","reverse","getPreperedGood","isSortedByLength","isSortedByAlphabetically","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEIC,EAAiB,SACjBC,EAAmB,WAyBlB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA6CF,oBAAS,GAAtD,mBAAOG,EAAP,KAAwBC,EAAxB,KACMC,EA1BR,SAAyBC,EAAOC,EAAWJ,GACzC,IAAMK,EAAY,YAAOF,GAmBzB,OAjBIC,GACFC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQJ,GACN,KAAKT,EACH,OAAOY,EAAEE,cAAcD,GACzB,KAAKd,EACH,OAAOa,EAAEH,GAAaI,EAAEJ,GAC1B,QACE,OAAO,MAKXJ,GACFK,EAAaK,UAGRL,EAMaM,CAClBlB,EACAK,EACAE,GAGIY,EAAmBd,IAAcJ,EACjCmB,EAA2Bf,IAAcH,EAO/C,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYH,IAEhBI,QAAS,kBAAMlB,EAAaJ,IAP9B,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYJ,IAEhBK,QAAS,kBAAMlB,EAAaL,IAP9B,4BAYA,wBACEqB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,kBAAMhB,GAAmBD,IAPpC,sBAWEF,GAAaE,IAEX,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAhDZ,WACEhB,GAAkB,GAClBF,EAAa,KA2CL,sBAUN,6BACGG,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC/GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0b09af69.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst SORT_BY_LENGHT = 'length';\nconst SORT_BY_ALPHABET = 'alphabet';\n\nfunction getPreperedGood(goods, sortGoods, isReversedGoods) {\n  const preperedGood = [...goods];\n\n  if (sortGoods) {\n    preperedGood.sort((a, b) => {\n      switch (sortGoods) {\n        case SORT_BY_ALPHABET:\n          return a.localeCompare(b);\n        case SORT_BY_LENGHT:\n          return a[sortGoods] - b[sortGoods];\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversedGoods) {\n    preperedGood.reverse();\n  }\n\n  return preperedGood;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversedGoods, setIsRevesedGoods] = useState(false);\n  const sortedGoods = getPreperedGood(\n    goodsFromServer,\n    sortField,\n    isReversedGoods,\n  );\n\n  const isSortedByLength = sortField !== SORT_BY_LENGHT;\n  const isSortedByAlphabetically = sortField !== SORT_BY_ALPHABET;\n\n  function resetButton() {\n    setIsRevesedGoods(false);\n    setSortField('');\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': isSortedByAlphabetically },\n          )}\n          onClick={() => setSortField(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': isSortedByLength },\n          )}\n          onClick={() => setSortField(SORT_BY_LENGHT)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversedGoods },\n          )}\n          onClick={() => setIsRevesedGoods(!isReversedGoods)}\n        >\n          Reverse\n        </button>\n        {(sortField || isReversedGoods)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetButton}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}