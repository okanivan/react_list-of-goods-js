{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_LENGTH","SORT_BY_ALPHABETICALLY","App","useState","sortField","setSortField","isReversedGoods","setIsReversedGoods","sortedGoods","goods","sortGoods","preperedGoods","sort","good1","good2","length","localeCompare","reverse","getPreperedGoods","isSortByLength","isSortByName","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,SACjBC,EAAyB,iBAyBxB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACMC,EA1BR,SAA0BC,EAAOC,EAAWJ,GAC1C,IAAMK,EAAa,YAAOF,GAmB1B,OAjBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKV,EACH,OAAOa,EAAME,OAASD,EAAMC,OAC9B,KAAKd,EACH,OAAOY,EAAMG,cAAcF,GAC7B,QACE,OAAO,MAKXR,GACFK,EAAcM,UAGTN,EAMaO,CAClBnB,EACAK,EACAE,GAGIa,EAAiBf,IAAcJ,EAC/BoB,EAAehB,IAAcH,EAEnC,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYH,IAEhBI,QAAS,kBAAMnB,EAAaJ,IAP9B,iCAYA,wBACEqB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYJ,IAEhBK,QAAS,kBAAMnB,EAAaL,IAP9B,4BAYA,wBACEsB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAajB,IAEjBkB,QAAS,kBAAMjB,GAAoBD,IAPrC,sBAWEF,GAAaE,IAEX,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,GAAmB,GACnBF,EAAa,KALjB,sBAaN,6BACGG,EAAYiB,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.92cb11f0.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_ALPHABETICALLY = 'alphabetically';\n\nfunction getPreperedGoods(goods, sortGoods, isReversedGoods) {\n  const preperedGoods = [...goods];\n\n  if (sortGoods) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortGoods) {\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        case SORT_BY_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversedGoods) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversedGoods, setIsReversedGoods] = useState(false);\n  const sortedGoods = getPreperedGoods(\n    goodsFromServer,\n    sortField,\n    isReversedGoods,\n  );\n\n  const isSortByLength = sortField !== SORT_BY_LENGTH;\n  const isSortByName = sortField !== SORT_BY_ALPHABETICALLY;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': isSortByName },\n          )}\n          onClick={() => setSortField(SORT_BY_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': isSortByLength },\n          )}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversedGoods },\n          )}\n          onClick={() => setIsReversedGoods(!isReversedGoods)}\n        >\n          Reverse\n        </button>\n        {(sortField || isReversedGoods)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setIsReversedGoods(false);\n                setSortField('');\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}